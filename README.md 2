# College Prep Academy - Comprehensive College Preparation Platform

A modern, full-stack web application for college preparation courses built with Next.js 15, TypeScript, and Tailwind CSS.

## üöÄ Features

### Core Functionality
- **User Authentication**: Secure login/registration for students and employees using NextAuth.js
- **Role-based Access**: Different interfaces for students, instructors, and administrators
- **Course Management**: Comprehensive course catalog with enrollment capabilities
- **Scheduling & Attendance**: Class scheduling and attendance tracking system
- **Virtual Classrooms**: Online learning environment with document sharing
- **Real-time Chat**: Interactive chat rooms for course discussions
- **Document Management**: Upload and share course materials and resources

### User Types
- **Students**: Access courses, view schedules, participate in discussions, track progress
- **Instructors**: Manage courses, track attendance, share materials, communicate with students
- **Administrators**: Full system access, user management, course administration

### Key Pages
- **Homepage**: Attractive landing page with features and testimonials
- **About Us**: Company information, team, mission, and values
- **Contact Us**: Contact form with FAQ and office information
- **Courses**: Comprehensive course catalog with filtering and details
- **Dashboard**: Personalized user dashboard with quick actions and progress tracking
- **Authentication**: Secure sign-in/sign-up with multiple providers

## üõ† Technology Stack

### Frontend
- **Next.js 15** - React framework with App Router
- **TypeScript** - Type-safe JavaScript
- **Tailwind CSS** - Utility-first CSS framework
- **Heroicons** - Beautiful SVG icons
- **React Hook Form** - Form handling and validation

### Backend & Database
- **Prisma** - Database ORM
- **PostgreSQL** - Primary database
- **NextAuth.js** - Authentication system
- **bcryptjs** - Password hashing

### Real-time Features
- **Socket.io** - Real-time chat functionality (configured for future integration)

### State Management & Data Fetching
- **React Query** - Server state management
- **React Context** - Client state management

## üöÄ Getting Started

### Prerequisites
- Node.js 18+ 
- PostgreSQL database
- npm or yarn package manager

### Installation

1. **Clone the repository**
   ```bash
   git clone <repository-url>
   cd college-prep-academy
   ```

2. **Install dependencies**
   ```bash
   npm install
   ```

3. **Set up environment variables**
   Copy `.env.local` and update with your values:
   ```bash
   # Database
   DATABASE_URL="postgresql://username:password@localhost:5432/college_prep_db"
   
   # NextAuth.js
   NEXTAUTH_SECRET="your-nextauth-secret-key-here"
   NEXTAUTH_URL="http://localhost:3000"
   
   # OAuth Providers (optional)
   GOOGLE_CLIENT_ID=""
   GOOGLE_CLIENT_SECRET=""
   ```

4. **Set up the database**
   ```bash
   # Generate Prisma client
   npx prisma generate
   
   # Run database migrations
   npx prisma db push
   
   # (Optional) Seed the database
   npx prisma db seed
   ```

5. **Start the development server**
   ```bash
   npm run dev
   ```

6. **Open your browser**
   Navigate to [http://localhost:3000](http://localhost:3000)

## üìù Available Scripts

- `npm run dev` - Start development server
- `npm run build` - Build for production
- `npm run start` - Start production server
- `npm run lint` - Run ESLint
- `npx prisma studio` - Open Prisma Studio (database GUI)
- `npx prisma generate` - Generate Prisma client
- `npx prisma db push` - Push schema changes to database

Built with ‚ù§Ô∏è for educational excellence
